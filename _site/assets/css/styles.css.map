{"version":3,"sourceRoot":"","sources":["../../_sass/abstracts/_mixins.scss","../../_sass/base/_base.scss","../../_sass/base/_typography.scss","../../_sass/layouts/_header.scss","../../_sass/base/_utilities.scss"],"names":[],"mappings":"AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AChBA;AAAA;AAAA;EAGI;EACA;EACA;;;AAGJ;EAEI;;AD8BI;EChCR;IAKQ;;;ADwBA;EC7BR;IASQ;;;AD0BA;ECnCR;IAaQ;;;;AAKR;EACI;;;ACzBJ;EACI;EACA;EACA;;;AAGJ;AAAA;AAAA;EAGI;EACA;EACA;;;AAGJ;EACI;;;ACfJ;EAEI;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA;EACI;EACA;EACA;;AAEA;EACI;ECjBR;;ADqBI;ECrBJ;;ADyBI;EACI;;AAGJ;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAGJ;EACI;EACA;;AAIJ;EACI;EACA;EACA;EACA;;AAEA;EACI;EACA;EACA;;AAMZ;EAEI;IACI","sourcesContent":["@mixin clearfix {\r\n    &::after {\r\n        content: \"\";\r\n        display: table;\r\n        clear: both;\r\n    }\r\n}\r\n\r\n@mixin absCenter {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n}\r\n\r\n// Media Query Manager\r\n/*\r\n0 - 600px:      Phone\r\n600 - 900px:    Tablet (Potrait)\r\n900 - 1200px:   Tablet (Landscape)\r\n{1200 - 1800px] is where our normal styles apply\r\n1800+:          Big desktop\r\n\r\n$breakpoint arguement choices: \r\n- phone\r\n- tab-port\r\n- tab-land\r\n- big-desktop\r\n\r\n1em = 16px\r\n*/\r\n\r\n@mixin respond($breakpoint) {\r\n    @if $breakpoint == phone {\r\n        @media only screen and (max-width: 37.5em) { @content };     // 600px\r\n    }\r\n    @if $breakpoint == tab-port {\r\n        @media only screen and (max-width: 56.25em) { @content };        // 900px\r\n    }\r\n    @if $breakpoint == tab-land {\r\n        @media only screen and (max-width: 75em) { @content };       // 1200px\r\n    }\r\n    @if $breakpoint == big-desktop {\r\n        @media only screen and (min-width: 112.50em) { @content };       // 1800px\r\n    }\r\n}","*,\r\n*::after,\r\n*::before {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: inherit;\r\n}\r\n\r\nhtml {\r\n    // This defines what 1rem is\r\n    font-size: 62.5%; // 1rem = 10px, 10px/16px = 62.5%\r\n    \r\n    @include respond (tab-land) {\r\n        font-size: 56.25%; // 1rem = 9px, 9/16 = 56.25%\r\n    }\r\n\r\n    @include respond (tab-port) {\r\n        font-size: 50%;// 1rem = 8px, 8/16 = 50%\r\n    }\r\n\r\n    @include respond (big-desktop) {    \r\n        font-size: 75%; // 1rem = 12px, 12/16 = 75%\r\n    }\r\n\r\n}\r\n\r\nbody {\r\n    box-sizing: border-box;\r\n}","@use '../base/utilities' as *;\r\n\r\nh1 {\r\n    font-family: 'Kalam', cursive;\r\n    font-weight: 700;\r\n    font-size: toRem(64);\r\n}\r\n\r\nh3,\r\nh4,\r\np {\r\n    font-family: 'Ubuntu', sans-serif;\r\n    font-weight: 400;\r\n    font-size: toRem(20);\r\n}\r\n\r\np {\r\n    font-size: toRem(16);\r\n}","@use '../base/utilities' as *;\r\n\r\n.hero {\r\n    // colors. using css variable due to some limitations with scss variables\r\n    --color-primary: hsl(184, 75%, 38%);\r\n    --color-primary-hue: 184;\r\n    --color-primary-saturation: 75%;\r\n    --color-primary-lightness: 50%;\r\n\r\n    background-image: url('../../assets/images/hero.jpg');\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n    background-size: cover;\r\n    min-height: 800px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    .content {\r\n        margin-top: 30px;\r\n        margin-left: 230px;\r\n        color: var(--color-primary);\r\n\r\n        h1 {\r\n            max-width: 407px;\r\n            @include textShadow(5px, hsl(0, 0%, 45%));\r\n        }\r\n\r\n        h3 {\r\n            @include textShadow(8px, hsl(0, 0%, 45%));\r\n        }\r\n\r\n        .cta-btn {\r\n            margin-top: 30px;\r\n        }\r\n\r\n        button {\r\n            padding: 10px 30px;\r\n            border-radius: 30px;\r\n            color: var(--color-primary);\r\n            font-weight: 400;\r\n            font-size: toRem(16);\r\n            background-color: transparent;\r\n            border: none;\r\n            box-shadow: 1px 1px 3px 1px hsl(var(--color-primary-hue), var(--color-primary-saturation), var(--color-primary-lightness));\r\n        }\r\n\r\n        button:hover {\r\n            background-color: var(--color-primary);\r\n            color: #eee;\r\n\r\n        }\r\n\r\n        button:nth-child(2) {\r\n            --color-primary-lightness: 30%;\r\n            margin: 0 10px;\r\n            background-color: var(--color-primary);\r\n            color: #eee;\r\n\r\n            &:hover {\r\n                --color-primary-lightness: 50%;\r\n                background-color: transparent;\r\n                color: var(--color-primary);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    @media(max-width: 768px) {\r\n\r\n        .content {\r\n            margin-left: 10%;\r\n        }\r\n    }\r\n}","@function toRem($value) {\r\n    $remValue: ($value / 10)+rem; // default font value is changed in _base.scss\r\n    @return $remValue;\r\n}\r\n\r\n@mixin textShadow($blur, $color) {\r\n    text-shadow: 3px 2px $blur $color;\r\n}"],"file":"styles.css"}